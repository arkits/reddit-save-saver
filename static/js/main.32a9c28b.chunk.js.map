{"version":3,"sources":["components/LoginDialog.js","components/NavBar.js","components/StatsCards.js","components/PostCard.js","components/SavedPosts.js","components/PageContent.js","components/Copyright.js","App.js","util/storage.js","theme.js","index.js"],"names":["LoginDialog","setCreds","React","useState","open","setOpen","p_user","setUsername","p_pass","setPassword","handleSubmit","e","preventDefault","username","password","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","onSubmit","TextField","variant","autoFocus","margin","label","type","fullWidth","value","className","onChange","target","DialogActions","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontFamily","fontWeight","fontStyle","NavBar","classes","AppBar","position","Toolbar","Typography","moment","require","popover","pointerEvents","fontSize","StatsCards","data","anchorEl","setAnchorEl","handlePopoverClose","Boolean","Grid","container","item","xs","Card","card","CardContent","color","gutterBottom","component","number_of_posts","onMouseEnter","event","currentTarget","onMouseLeave","last_dump","fromNow","Popover","paper","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","format","display","large","width","height","PostCard","post","CardActionArea","href","permalink","content","author","subreddit","Date","created_utc","toDateString","align","Avatar","src","thumbnail","axios","SavedPosts","creds","posts","setPosts","skip","setSkip","isLoading","setIsLoading","apiUrl","apiError","setApiError","useEffect","fetchPosts","a","async","console","log","headers","Authorization","btoa","result","saved_posts","newPosts","message","CircularProgress","map","key","PageContent","setData","fetchData","catch","error","LinearProgress","Copyright","Link","name","version","flexDirection","minHeight","main","marginBottom","marginTop","footer","padding","backgroundColor","palette","grey","App","initialValue","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","CssBaseline","Box","Container","maxWidth","createMuiTheme","ReactDOM","render","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.32a9c28b.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction LoginDialog({ setCreds }) {\n    const [open, setOpen] = React.useState(false);\n    const [p_user, setUsername] = React.useState(\"\");\n    const [p_pass, setPassword] = React.useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (!p_user || !p_pass) return;\n\n        setCreds({\n            username: p_user,\n            password: p_pass\n        });\n\n        handleClose();\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button onClick={handleClickOpen}>Login</Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n                <DialogContent>\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"username\"\n                            label=\"Username\"\n                            type=\"text\"\n                            fullWidth\n                            value={p_user}\n                            className=\"input\"\n                            onChange={e => setUsername(e.target.value)}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            id=\"password\"\n                            label=\"Password\"\n                            className=\"input\"\n                            type=\"password\"\n                            fullWidth\n                            value={p_pass}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleSubmit}>Set</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default LoginDialog;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LoginDialog from \"./LoginDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: \"Space Mono\",\n        fontWeight: \"700\",\n        fontStyle: \"italic\"\n    }\n}));\n\nexport default function NavBar({ setCreds }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        reddit-save-saver\n                    </Typography>\n                    <LoginDialog setCreds={setCreds} />\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover from \"@material-ui/core/Popover\";\n\nvar moment = require(\"moment\");\n\nconst useStyles = makeStyles({\n    popover: {\n        pointerEvents: \"none\"\n    },\n    title: {\n        fontSize: 14\n    }\n});\n\nfunction StatsCards({ data }) {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handlePopoverOpen = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={4}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            Welcome\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {data.username}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item xs={4}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            Number of Posts\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {data.number_of_posts}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid\n                item\n                xs={4}\n                onMouseEnter={handlePopoverOpen}\n                onMouseLeave={handlePopoverClose}\n            >\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        >\n                            Last Update\n                        </Typography>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            {moment(data.last_dump * 1000).fromNow()}\n                        </Typography>\n                    </CardContent>\n                </Card>\n\n                <Popover\n                    id=\"mouse-over-popover\"\n                    className={classes.popover}\n                    classes={{\n                        paper: classes.paper\n                    }}\n                    open={open}\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                    onClose={handlePopoverClose}\n                    disableRestoreFocus\n                >\n                    <Typography>\n                        {moment(data.last_dump * 1000).format(\n                            \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                        )}\n                    </Typography>\n                </Popover>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default StatsCards;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: \"flex\"\n    },\n    large: {\n        width: \"100%\",\n        height: \"100%\"\n    }\n}));\n\nfunction PostCard({ post }) {\n    const classes = useStyles();\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardActionArea\n                    target=\"_blank\"\n                    href={\"https://reddit.com\" + post.permalink}\n                >\n                    <Grid container spacing={0}>\n                        <Grid item xs={9}>\n                            <CardContent className={classes.content}>\n                                <Typography component=\"h6\" variant=\"h6\">\n                                    {post.title}\n                                </Typography>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                >\n                                    {post.author}\n                                </Typography>\n                                <Typography\n                                    variant=\"subtitle2\"\n                                    color=\"textSecondary\"\n                                >\n                                    {post.subreddit} |{\" \"}\n                                    {new Date(\n                                        post.created_utc * 1000\n                                    ).toDateString()}\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                        <Grid align=\"right\" item xs={3}>\n                            <Avatar\n                                variant=\"square\"\n                                className={classes.large}\n                                src={post.thumbnail}\n                            ></Avatar>\n                        </Grid>\n                    </Grid>\n                </CardActionArea>\n            </Card>\n            <br />\n        </div>\n    );\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Button } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PostCard from \"./PostCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"axios\";\nconst axios = require(\"axios\");\n\nfunction SavedPosts({ creds }) {\n    const [posts, setPosts] = React.useState([]);\n\n    const [skip, setSkip] = React.useState(0);\n\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const [apiUrl] = React.useState(\"https://archit.xyz/rss/api/saves\");\n\n    const [apiError, setApiError] = React.useState(\"\");\n\n    function addPosts(newPosts) {\n        // TODO: Implement adding new posts to old posts\n        setPosts(newPosts);\n    }\n\n    React.useEffect(() => {\n        if (creds.username !== \"\") {\n            fetchPosts();\n        }\n    }, [creds, skip]);\n\n    const fetchPosts = async () => {\n        console.log(\"In fetchPosts - \", creds);\n        setIsLoading(true);\n        try {\n            const result = await axios(apiUrl + \"?skip=\" + skip + \"&limit=10\", {\n                headers: {\n                    Authorization:\n                        \"Basic \" + btoa(creds.username + \":\" + creds.password)\n                }\n            });\n            console.log(\"Setting posts - \", result.data.saved_posts);\n            addPosts(result.data.saved_posts);\n            setIsLoading(false);\n        } catch (error) {\n            console.log(\"Caught Error - \", error);\n            setIsLoading(false);\n            setApiError(error.message);\n        }\n    };\n\n    const fetchRandomPosts = async () => {\n        console.log(\"In fetchRandomPosts - \", creds);\n        var randomApiUrl = \"https://archit.xyz/rss/api/saves/random\";\n        setIsLoading(true);\n        try {\n            const result = await axios(randomApiUrl, {\n                headers: {\n                    Authorization:\n                        \"Basic \" + btoa(creds.username + \":\" + creds.password)\n                }\n            });\n            console.log(\"Setting random posts - \", result.data.saved_posts);\n            setPosts(result.data.saved_posts);\n            setIsLoading(false);\n        } catch (error) {\n            console.log(\"Caught Error - \", error);\n            setIsLoading(false);\n            setApiError(error.message);\n        }\n    };\n\n    if (isLoading) {\n        return (\n            <center>\n                <CircularProgress color=\"secondary\" />\n            </center>\n        );\n    } else {\n        if (apiError) {\n            return (\n                <div>\n                    <Card>\n                        <CardContent>\n                            <div align=\"center\">\n                                <Typography color=\"textSecondary\" gutterBottom>\n                                    Whoops!\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {apiError}\n                                </Typography>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Card>\n                        <CardContent>\n                            <div align=\"center\">\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={() => {\n                                        fetchPosts(true);\n                                    }}\n                                >\n                                    Latest\n                                </Button>{\" \"}\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={fetchRandomPosts}\n                                >\n                                    Random\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <br />\n                    {posts.map((post, key) => (\n                        <PostCard post={post} key={post.id} />\n                    ))}\n                    <center>\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => setSkip(skip + 10)}\n                        >\n                            Load more\n                        </Button>\n                    </center>\n                </div>\n            );\n        }\n    }\n}\n\nexport default SavedPosts;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StatsCards from \"./StatsCards\";\nimport SavedPosts from \"./SavedPosts\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nimport \"axios\";\nconst axios = require(\"axios\");\n\nfunction PageContent({ creds }) {\n    const [data, setData] = React.useState({});\n    const [apiError, setApiError] = React.useState(\"\");\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (creds.username !== \"\") {\n            async function fetchData() {\n                try {\n                    const result = await axios(\n                        \"https://archit.xyz/rss/api/debug\",\n                        {\n                            headers: {\n                                Authorization:\n                                    \"Basic \" +\n                                    btoa(creds.username + \":\" + creds.password)\n                            }\n                        }\n                    );\n\n                    setData(result.data);\n                    setIsLoading(false);\n                } catch (error) {\n                    setIsLoading(false);\n                    console.log(\"Caught Error! - \", error);\n                    setApiError(error.message);\n                }\n            }\n\n            fetchData().catch(console.error);\n        }\n    }, [creds]);\n\n    if (creds.username === \"\") {\n        return (\n            <div>\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    Namaskar Mandali\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {\"You are not currently logged in.\"}\n                </Typography>\n            </div>\n        );\n    } else {\n        if (isLoading) {\n            return (\n                <div>\n                    <LinearProgress color=\"secondary\" />\n                </div>\n            );\n        } else {\n            if (apiError !== \"\") {\n                return (\n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                            {apiError}!\n                        </Typography>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <StatsCards data={data} />\n                        <br />\n                        <SavedPosts creds={creds} />\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default PageContent;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport \"axios\";\nconst axios = require(\"axios\");\n\nfunction Copyright() {\n    const [data, setData] = React.useState({});\n\n    React.useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios(\"https://archit.xyz/rss/api\");\n            setData(result.data);\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                    >\n                        <Link color=\"inherit\" href=\"https://arkits.github.io/\">\n                            arkits.github.io\n                        </Link>\n                        {\" // \"}\n                        <Link color=\"inherit\" href=\"https://archit.xyz/\">\n                            archit.xyz\n                        </Link>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6} align=\"right\">\n                    {data.name}/{data.version}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Copyright;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nimport NavBar from \"./components/NavBar\";\nimport PageContent from \"./components/PageContent\"\nimport Copyright from \"./components/Copyright\"\n\nimport { useLocalStorage } from \"./util/storage\";\n\nfunction App() {\n    const classes = useStyles();\n\n    const [creds, setCreds] = useLocalStorage('creds', {\n        username: \"\",\n        password: \"\"\n    });\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Box component=\"main\" className={classes.main}>\n                <NavBar setCreds={setCreds} />\n                <Container className={classes.content} maxWidth=\"sm\">\n                    <PageContent creds={creds} />\n                </Container>\n            </Box>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\"\n    },\n    main: {\n        marginBottom: theme.spacing(2)\n    },\n    content: {\n        marginTop: theme.spacing(8)\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: \"auto\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[800]\n                : theme.palette.grey[200]\n    }\n}));\n\nexport default App;\n","import React from \"react\";\n\n// Big ups to https://usehooks.com/useLocalStorage/\n\nexport function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = React.useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\"\n    }\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}